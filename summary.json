{
  "stats": {
    "suites": 4,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2022-10-27T10:56:39.300Z",
    "end": "2022-10-27T10:57:32.287Z",
    "duration": 7709,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7467972c-c047-46da-8318-6161a4936b3e",
      "title": "",
      "fullFile": "cypress/e2e/ui.cy.ts",
      "file": "cypress/e2e/ui.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b3d15144-f831-46fb-8153-27d050fa0af1",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 905,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "97d7456a-fdd9-40da-8c8b-4254f72a7217",
              "parentUUID": "b3d15144-f831-46fb-8153-27d050fa0af1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "97d7456a-fdd9-40da-8c8b-4254f72a7217"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 905,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4cbbf51b-8380-4512-8a29-5885e4b0d01e",
      "title": "",
      "fullFile": "cypress/e2e/ui.cy.ts",
      "file": "cypress/e2e/ui.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "86e6367f-d6fd-4a77-b21f-c08139870f1f",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 686,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "44e23057-8150-4791-9e47-760d3a342376",
              "parentUUID": "86e6367f-d6fd-4a77-b21f-c08139870f1f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "44e23057-8150-4791-9e47-760d3a342376"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 686,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "b6aa67b2-a4dc-4fec-8038-300d9f821d6f",
      "title": "",
      "fullFile": "cypress/e2e/api.cy.ts",
      "file": "cypress/e2e/api.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8284644-3a72-43c7-97d2-2765633d3db1",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4926,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-something')\n    .type('fake@email.com').should('have.value', 'fake@email.com')\n    // .type() with special character sequences\n    .type('{leftarrow}{rightarrow}{uparrow}{downarrow}')\n    .type('{del}{selectall}{backspace}')\n    // .type() with key modifiers\n    .type('{alt}{option}') //these are equivalent\n    .type('{ctrl}{control}') //these are equivalent\n    .type('{meta}{command}{cmd}') //these are equivalent\n    .type('{shift}')\n    // Delay each keypress by 0.1 sec\n    .type('slow.typing@email.com', { delay: 100 })\n    .should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled')\n    // Ignore error checking prior to type\n    // like whether the input is visible or disabled\n    .type('disabled error checking', { force: true })\n    .should('have.value', 'disabled error checking');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.action-something`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.action-something`, but never found it.\n    at ./cypress/e2e/api.cy.ts/ (webpack:///./cypress/e2e/api.cy.ts:12:7)\n    at ../driver/src/cypress/cy.ts/setRunnable/runnable.fn (https://example.cypress.io/__cypress/runner/cypress_runner.js:157640:43)\n    at callFn (https://example.cypress.io/__cypress/runner/cypress_runner.js:107910:21)\n    at ../driver/src/cypress/runner.ts/create/onRunnableRun (https://example.cypress.io/__cypress/runner/cypress_runner.js:164958:30)\n    at finallyHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:7872:23)\n    at tryCatcher (https://example.cypress.io/__cypress/runner/cypress_runner.js:11318:23)\n    at ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromiseFromHandler (https://example.cypress.io/__cypress/runner/cypress_runner.js:9253:31)\n    at ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise (https://example.cypress.io/__cypress/runner/cypress_runner.js:9310:18)\n    at ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromise0 (https://example.cypress.io/__cypress/runner/cypress_runner.js:9355:10)\n    at ../../node_modules/bluebird/js/release/promise.js/</module.exports/Promise.prototype._settlePromises (https://example.cypress.io/__cypress/runner/cypress_runner.js:9435:18)\n    at _drainQueueStep (https://example.cypress.io/__cypress/runner/cypress_runner.js:6025:12)\n    at _drainQueue (https://example.cypress.io/__cypress/runner/cypress_runner.js:6018:24)\n    at ../../node_modules/bluebird/js/release/async.js/</Async.prototype._drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:6034:16)\n    at ../../node_modules/bluebird/js/release/async.js/</Async/this.drainQueues (https://example.cypress.io/__cypress/runner/cypress_runner.js:5904:14)",
                "diff": null
              },
              "uuid": "acf589ab-952e-462c-bb14-5c07896d1ea8",
              "parentUUID": "b8284644-3a72-43c7-97d2-2765633d3db1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 488,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus()\n    .should('have.class', 'focus')\n    .prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "a7a4767a-5254-4d83-b56a-35f2aef5a835",
              "parentUUID": "b8284644-3a72-43c7-97d2-2765633d3db1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a7a4767a-5254-4d83-b56a-35f2aef5a835"
          ],
          "failures": [
            "acf589ab-952e-462c-bb14-5c07896d1ea8"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "2870b5f6-0314-4c88-85e3-e90716b81d66",
      "title": "",
      "fullFile": "cypress/e2e/ui.cy.ts",
      "file": "cypress/e2e/ui.cy.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0bf814ee-74ba-4b12-b680-6ad693dd3e81",
          "title": "example to-do app",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "displays two todo items by default",
              "fullTitle": "example to-do app displays two todo items by default",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// We use the `cy.get()` command to get all elements that match the selector.\n// Then, we use `should` to assert that there are two matched items,\n// which are the two default items.\ncy.get('.todo-list li').should('have.length', 2);\n// We can go even further and check that the default todos each contain\n// the correct text. We use the `first` and `last` functions\n// to get just the first and last matched elements individually,\n// and then perform an assertion with `should`.\ncy.get('.todo-list li').first().should('have.text', 'Pay electric bill');\ncy.get('.todo-list li').last().should('have.text', 'Walk the dog');",
              "err": {},
              "uuid": "cb34b405-9c11-4bfe-a937-b78f20d6d325",
              "parentUUID": "0bf814ee-74ba-4b12-b680-6ad693dd3e81",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cb34b405-9c11-4bfe-a937-b78f20d6d325"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 704,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "charts": true,
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/mocha"
      },
      "version": "6.2.0"
    }
  }
}